/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// MinecraftServerSettingsApplyConfiguration represents an declarative configuration of the MinecraftServerSettings type for use
// with apply.
type MinecraftServerSettingsApplyConfiguration struct {
	LevelSeed  *string `json:"levelSeed,omitempty"`
	GameMode   *string `json:"gameMode,omitempty"`
	Difficulty *string `json:"difficulty,omitempty"`
	MaxPlayers *int32  `json:"maxPlayers,omitempty"`
	LevelName  *string `json:"levelName,omitempty"`
}

// MinecraftServerSettingsApplyConfiguration constructs an declarative configuration of the MinecraftServerSettings type for use with
// apply.
func MinecraftServerSettings() *MinecraftServerSettingsApplyConfiguration {
	return &MinecraftServerSettingsApplyConfiguration{}
}

// WithLevelSeed sets the LevelSeed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LevelSeed field is set to the value of the last call.
func (b *MinecraftServerSettingsApplyConfiguration) WithLevelSeed(value string) *MinecraftServerSettingsApplyConfiguration {
	b.LevelSeed = &value
	return b
}

// WithGameMode sets the GameMode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GameMode field is set to the value of the last call.
func (b *MinecraftServerSettingsApplyConfiguration) WithGameMode(value string) *MinecraftServerSettingsApplyConfiguration {
	b.GameMode = &value
	return b
}

// WithDifficulty sets the Difficulty field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Difficulty field is set to the value of the last call.
func (b *MinecraftServerSettingsApplyConfiguration) WithDifficulty(value string) *MinecraftServerSettingsApplyConfiguration {
	b.Difficulty = &value
	return b
}

// WithMaxPlayers sets the MaxPlayers field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxPlayers field is set to the value of the last call.
func (b *MinecraftServerSettingsApplyConfiguration) WithMaxPlayers(value int32) *MinecraftServerSettingsApplyConfiguration {
	b.MaxPlayers = &value
	return b
}

// WithLevelName sets the LevelName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LevelName field is set to the value of the last call.
func (b *MinecraftServerSettingsApplyConfiguration) WithLevelName(value string) *MinecraftServerSettingsApplyConfiguration {
	b.LevelName = &value
	return b
}
