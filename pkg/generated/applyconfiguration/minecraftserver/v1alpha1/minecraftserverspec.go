/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// MinecraftServerSpecApplyConfiguration represents an declarative configuration of the MinecraftServerSpec type for use
// with apply.
type MinecraftServerSpecApplyConfiguration struct {
	ServerVersion      *string                                      `json:"serverVersion,omitempty"`
	ServiceAccountName *string                                      `json:"serviceAccountName,omitempty"`
	CreateService      *bool                                        `json:"createService,omitempty"`
	RestartPolicy      *string                                      `json:"restartPolicy,omitempty"`
	DataVolume         *MinecraftPersistentVolumeApplyConfiguration `json:"dataVolume,omitempty"`
	Replicas           *int32                                       `json:"replicas,omitempty"`
	ServerSettings     *MinecraftServerSettingsApplyConfiguration   `json:"serverSettings,omitempty"`
}

// MinecraftServerSpecApplyConfiguration constructs an declarative configuration of the MinecraftServerSpec type for use with
// apply.
func MinecraftServerSpec() *MinecraftServerSpecApplyConfiguration {
	return &MinecraftServerSpecApplyConfiguration{}
}

// WithServerVersion sets the ServerVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServerVersion field is set to the value of the last call.
func (b *MinecraftServerSpecApplyConfiguration) WithServerVersion(value string) *MinecraftServerSpecApplyConfiguration {
	b.ServerVersion = &value
	return b
}

// WithServiceAccountName sets the ServiceAccountName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceAccountName field is set to the value of the last call.
func (b *MinecraftServerSpecApplyConfiguration) WithServiceAccountName(value string) *MinecraftServerSpecApplyConfiguration {
	b.ServiceAccountName = &value
	return b
}

// WithCreateService sets the CreateService field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CreateService field is set to the value of the last call.
func (b *MinecraftServerSpecApplyConfiguration) WithCreateService(value bool) *MinecraftServerSpecApplyConfiguration {
	b.CreateService = &value
	return b
}

// WithRestartPolicy sets the RestartPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RestartPolicy field is set to the value of the last call.
func (b *MinecraftServerSpecApplyConfiguration) WithRestartPolicy(value string) *MinecraftServerSpecApplyConfiguration {
	b.RestartPolicy = &value
	return b
}

// WithDataVolume sets the DataVolume field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DataVolume field is set to the value of the last call.
func (b *MinecraftServerSpecApplyConfiguration) WithDataVolume(value *MinecraftPersistentVolumeApplyConfiguration) *MinecraftServerSpecApplyConfiguration {
	b.DataVolume = value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *MinecraftServerSpecApplyConfiguration) WithReplicas(value int32) *MinecraftServerSpecApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithServerSettings sets the ServerSettings field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServerSettings field is set to the value of the last call.
func (b *MinecraftServerSpecApplyConfiguration) WithServerSettings(value *MinecraftServerSettingsApplyConfiguration) *MinecraftServerSpecApplyConfiguration {
	b.ServerSettings = value
	return b
}
